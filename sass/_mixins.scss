/* Color */
@mixin tap-highlight-color($color) {
	-webkit-tap-highlight-color: $color;
	-moz-tap-highlight-color: $color; 
	-ms-tap-highlight-color: $color; 
}

@mixin backface-visibility($value) {
	-webkit-backface-visibility: $value;
	-moz-backface-visibility: $value;
	-ms-backface-visibility: $value;
}
/* /Color */

/* Typography */
@mixin font-serif {
	font-family: Karma,Georgia,Cambria,"Times New Roman",Times,serif;
	font-weight: 500;
}

@mixin font-sans-serif {
	font-family: Lato,"Lucida Grande","Lucida Sans Unicode","Lucida Sans",Geneva,Verdana,sans-serif;
	font-weight: 400;
}

@mixin font-cursive {
	font-family: Norican,Karma,Georgia,Cambria,"Times New Roman",Times,serif;
	font-weight: 400;
}

@mixin text-size-adjust($value) {
	-webkit-text-size-adjust: $value;
	-moz-text-size-adjust: $value;
	-ms-text-size-adjust: $value;
}

@mixin font-smoothing($value) {
	-webkit-font-smoothing: $value;
	-moz-font-smoothing: $value;
	-ms-font-smoothing: $value;
}
/* /Typography */

/* Effects */
@mixin nav-effect($opacity, $x, $scale, $time) {
	opacity: $opacity;

	-webkit-transform: translate3d($x,0,0)scale($scale);
	-webkit-animation: slideIn $time ease-in-out;

	-moz-transform: translate3d($x,0,0)scale($scale);
	-moz-animation: slideIn $time ease-in-out;

	transform: translate3d($x,0,0)scale($scale);
	animation: slideIn $time ease-in-out;
}

@mixin slide-in($opacity-start, $opacity-end, $x-start, $x-end, $scale-start, $scale-end) {
	@-webkit-keyframes slideIn {
		0%       {opacity: $opacity-start;
					-webkit-transform: translate3d($x-start,0,0)scale($scale-start);}
		100%  {opacity: $opacity-end;
					-webkit-transform: translate3d($x-end,0,0)scale($scale-end);}
	}
	@-moz-keyframes slideIn {
		0%      {opacity: $opacity-start;
					-moz-transform: translate3d($x-start,0,0)scale($scale-start);}
		100%  {opacity: $opacity-end;
					-moz-transform: translate3d($x-end,0,0)scale($scale-end);}
	}
	@keyframes slideIn {
		0%      {opacity: $opacity-start;
					transform: translate3d($x-start,0,0)scale($scale-start);}
		100%  {opacity: $opacity-end;
					transform: translate3d($x-end,0,0)scale($scale-end);}
	}
}

@mixin content-effect($x, $time, $animation) {
	-webkit-transform: translate3d($x,0,0);
	-webkit-animation: $animation $time ease-in-out;

	-moz-transform: translate3d($x,0,0);
	-moz-animation: $animation $time ease-in-out;

	transform: translate3d($x,0,0);
	animation: open $animation ease-in-out;
}

@mixin content-slide-open($x-start, $x-middle, $x-end) {
	@-webkit-keyframes open {
		0%      {-webkit-transform: translate3d($x-start,0,0);}
		70%    {-webkit-transform: translate3d($x-middle,0,0);}
		100%  {-webkit-transform: translate3d($x-end,0,0);}
	}
	@-moz-keyframes open {
		0%      {-moz-transform: translate3d($x-start,0,0);}
		70%    {-moz-transform: translate3d($x-middle,0,0);}
		100%  {-moz-transform: translate3d($x-end,0,0);}
	}
	@keyframes open {
		0%      {transform: translate3d($x-start,0,0);}
		70%    {transform: translate3d($x-middle,0,0);}
		100%  {transform: translate3d($x-end,0,0);}
	}
}

@mixin content-slide-close($x-start, $x-end) {
	@-webkit-keyframes close {
		0%      {-webkit-transform: translate3d($x-start,0,0);}
		100%  {-webkit-transform: translate3d($x-end,0,0);}
	}
	@-moz-keyframes close {
		0%       {-moz-transform: translate3d($x-start,0,0);}
		100%  {-moz-transform: translate3d($x-end,0,0);}
	}
	@keyframes close {
		0%       {transform: translate3d($x-start,0,0);}
		100%  {transform: translate3d($x-end,0,0);}
	}
}

@mixin starting-point {
	-webkit-transform: translate3d(0,0,0);
	-moz-transform: translate3d(0,0,0);
	transform: translate3d(0,0,0);
}
/* /Effects */

/* Layout */
@mixin autoresize {
	max-width: 100%;
	height: auto;
    width: auto\9; /* ie8 */
}

@mixin button-size($size) {
	div { margin-left: $size / 3 }
	img {
		display: block;
		float: left;
		width: $size;
		height: $size;
	}
}

@mixin transform($value) {
	-webkit-transform: $value;
	-moz-transform: $value;
	transform: $value;
}

@mixin fix-border {
	-webkit-box-sizing: border-box; /* For legacy WebKit based browsers */
     -moz-box-sizing: border-box; /* For all Gecko based browsers */
          box-sizing: border-box;
}
/* /Layout */

$break-phone: 767px;

@mixin respond-to($media) {
	@if $media == phone {
		@media only screen and (max-device-width: 767px) { @content; }
	}
	@else if $media == portrait-phone {
		@media only screen and (max-device-width: 767px) and (orientation: portrait) { @content; }
	}
	@else if $media == tablet-and-desktop {
		@media only screen and (min-device-width: 768px) { @content; }
	}
}

/* @include respond-to(phone) { width: 100% ;} */